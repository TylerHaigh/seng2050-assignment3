apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'eclipse-wtp'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: 'junit:junit:4.12-beta-2'
    def tomcatVersion = '7.0.55'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
	runtime 'jstl:jstl:1.2',
		'mysql:mysql-connector-java:5.1.33',
		'xalan:xalan:2.7.2',
		'xalan:serializer:2.7.2',
		'taglibs:standard:1.1.2',
		'xerces:xercesImpl:2.11.0',
		'xml-apis:xml-apis:2.0.2'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
	test {
		java {
			srcDir 'test'
		}
	}
}

war {
    webInf { from 'WebContent/WEB-INF'}
}

tomcat {
    webAppDirName = 'WebContent'
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
    }
}

task zip(type: War, dependsOn: classes) {
    classpath = war.classpath.filter { it.name.endsWith('java') }
    classpath = war.classpath.filter { it.name.endsWith('jar') }
    into('Documentation') {
        from('Documentation') {
            include '**/*.pdf'
            include '**/*.mdj'
        }
    }
    into('SqlScripts') {
        from 'SqlScripts'
    }
    into('WEB-INF/classes') {
        from('src') {
            include '**/*.java'
        }
    }
    from 'Documentation/SENG2050_Assignment3_Coversheet_C3182929_C3185790_C3165877.pdf'
    destinationDir = file("$buildDir/distributions")
    archiveName("seng2050-assignment3.zip")
}
